:root{
--decorator-outer-offset-left: -6.5px;
}
</style>")
}
# Build interactive network of positions colored by section
# and connected if they occurred in the same year
datadrivencv::build_network_logo(CV$entries_data)
View(CV)
View(CV[["entries_data"]])
if(params$pdf_mode){
cat("View this CV online with links at _nickstrayer.me/datadrivencv/_")
} else {
googlesheets4::gs4_auth( cache = ".secrets", email = "jgammerman@gmail.com" )
}
CV %>% print_contact_info()
CV %>% print_skill_bars()
# Note the special double pipe so we modify the CV object in place
CV %<>% print_text_block("intro")
?print_text_block
View(CV)
View(CV[["text_blocks"]])
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
#        data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
#        data_location = "https://docs.google.com/spreadsheets/d/1ziUIWzHXqyCjFZJtFzj8PUo1uPIct9Q37mLGqeuVn1I/edit#gid=1730172225",
data_location = "https://docs.google.com/spreadsheets/d/14MQICF2F8-vf8CKPF1m4lyGKO6_thG-4aSwat1e2TWc"
# pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv"
)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
#        data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
#        data_location = "https://docs.google.com/spreadsheets/d/1ziUIWzHXqyCjFZJtFzj8PUo1uPIct9Q37mLGqeuVn1I/edit#gid=1730172225",
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
# pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = FALSE
)
googlesheets4::gs4_auth()
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("CV_printing_functions.R")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
pdf_mode = params$pdf_mode,
sheet_is_publicly_readable = FALSE
)
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
googlesheets4::gs4_auth()
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("CV_printing_functions.R")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
pdf_mode = params$pdf_mode,
sheet_is_publicly_readable = FALSE
)
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("CV_printing_functions.R")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit?usp=sharing",
pdf_mode = params$pdf_mode,
sheet_is_publicly_readable = FALSE
)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
#        data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
# pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = FALSE
)
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("CV_printing_functions.R")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
pdf_mode = params$pdf_mode
)
View(CV)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
#        data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
# pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = TRUE
)
print_skill_bars <- function(cv, out_of = 5, bar_color = "#969696", bar_background = "#d9d9d9", glue_template = "default"){
if(glue_template == "default"){
glue_template <- "
<div
class = 'skill-bar'
style = \"background:linear-gradient(to right,
{bar_color} {width_percent}%,
{bar_background} {width_percent}% 100%)\"
>{skill}</div>"
}
cv$skills %>%
dplyr::mutate(width_percent = round(100*level/out_of)) %>%
glue::glue_data(glue_template) %>%
print()
invisible(cv)
}
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Nick Strayer",
data_location = "https://docs.google.com/spreadsheets/d/14MQICF2F8-vf8CKPF1m4lyGKO6_thG-4aSwat1e2TWc",
pdf_location = "https://github.com/nstrayer/cv/raw/master/strayer_cv.pdf",
html_location = "nickstrayer.me/cv/",
source_location = "https://github.com/nstrayer/cv"
)
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the HTML version
rmarkdown::render("cv.Rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
?print_skill_bars
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
#        data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
# pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = TRUE
)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
#        data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
# pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = TRUE
)
getwd()
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
trib <- tribble(
~Gender, ~Ethnicity,  ~`Perceived Competence`,
# -- / -- / ---------------------------
"Men", "White", 7.6,
"Men", "Black", 7.4,
"Women", "White", 7.1,
"Women", "Black", 5.6
)
library(tibble)
trib <- tribble(
~Gender, ~Ethnicity,  ~`Perceived Competence`,
# -- / -- / ---------------------------
"Men", "White", 7.6,
"Men", "Black", 7.4,
"Women", "White", 7.1,
"Women", "Black", 5.6
)
trib
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
ggplot(trib, aes(x = Race, y = `Perceived Competence`, fill = Gender)) +
geom_line()  +
coord_cartesian(ylim = c(0,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_line()  +
coord_cartesian(ylim = c(0,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_line()  +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`)) +
geom_line()  +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
coord_cartesian(ylim = c(1,9)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(tibble)
trib <- tribble(
~Gender, ~Ethnicity,  ~`Perceived Competence`, ~Error1, ~Error2,
# ------ / ------ / ---------------------------/-------/---------
"Men", "White", 7.6, 7.45, 7.95,
"Men", "Black", 7.4, 7.15, 7.55,
"Women", "White", 7.1, 6.9, 7.45,
"Women", "Black", 5.6, 5.45, 5.8
)
trib
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = error1, ymax = error2)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .2) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .2, position = position_dodge(.9)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .5, position = position_dodge(.9)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(tibble)
trib <- tribble(
~Gender, ~Ethnicity,  ~`Perceived Competence`, ~Error1, ~Error2,
# ------ / ------ / ---------------------------/-------/---------
"Men", "White", 7.7, 7.45, 7.95,
"Men", "Black", 7.35, 7.15, 7.55,
"Women", "White", 7.15, 6.9, 7.4,
"Women", "Black", 5.6, 5.4, 5.8
)
trib
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .5, position = position_dodge(.9)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .5, position = position_dodge(.9)) +
scale_y_continuous(breaks=seq(0,8,1)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .5, position = position_dodge(.2)) +
scale_y_continuous(breaks=seq(0,8,1)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
library(ggplot2)
ggplot(trib, aes(x = Ethnicity, y = `Perceived Competence`, fill = Gender)) +
geom_col(position="dodge2")  +
geom_errorbar(aes(ymin = Error1, ymax = Error2), width = .5, position = position_dodge(.9)) +
scale_y_continuous(breaks=seq(0,8,1)) +
coord_cartesian(ylim = c(1,8)) +
labs(title = "Results - Physics Departments",
subtitle = "Perceived competence of candidates by ethnicity and gender") +
ylab("Perceived Competence (%)")
setwd("~/Desktop/Data_Science/My_CV/Resume")
View(trib)
setwd("~/Desktop/Data_Science/My_CV/Resume")
setwd("~/Desktop/Data_Science/My_CV/Resume")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = FALSE),
output_file = "resume.html")
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = FALSE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = FALSE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = FALSE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
setwd("~/Desktop/Data_Science/My_CV/Resume")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = FALSE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume_JamesGammerman.pdf")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "JamesGammerman_resume.pdf")
?datadrivencv::build_network_logo
setwd("~/Desktop/Data_Science/My_CV/Resume")
# Knit the HTML version
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = "resume.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("resume.Rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "JamesGammerman_resume.pdf")
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "resume.pdf")
library(datadrivencv)
install.packages(c("blogdown", "boot", "broom", "class", "cli", "cluster", "cpp11", "crayon", "data.table", "dbplyr", "desc", "DiceDesign", "distributional", "dplyr", "dtplyr", "e1071", "fable", "fabletools", "farver", "fastmap", "feasts", "forcats", "forecast", "fpp3", "furrr", "gargle", "gert", "GGally", "ggforce", "ggraph", "gifski", "glmnet", "googlesheets4", "gtrendsR", "htmltools", "ipred", "isoband", "ISOcodes", "knitr", "lava", "lifecycle", "lime", "lubridate", "MASS", "matrixStats", "memoise", "mgcv", "mime", "nlme", "nnet", "parallelly", "pillar", "pkgload", "promises", "ps", "rappdirs", "RcppArmadillo", "RcppParallel", "RCurl", "reactR", "reprex", "rmarkdown", "rsample", "rstanarm", "rvest", "sf", "shiny", "shinythemes", "shinyWidgets", "skimr", "slider", "spatial", "stars", "stopwords", "survival", "systemfonts", "testthat", "tfruns", "tibble", "tidyquant", "tidyr", "tinytex", "TMB", "topicmodels", "tsibble", "tsibbledata", "tune", "units", "usethis", "utf8", "vitae", "waldo", "websocket", "withr", "workflows", "xfun", "zoo"))
datadrivencv::use_datadriven_cv(full_name = "James Gammerman")
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
#data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = TRUE
)
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
#data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = TRUE
)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "James Gammerman",
#data_location = "/Users/yasha/Desktop/Data_Science/My_CV/CSVs/",
data_location = "https://docs.google.com/spreadsheets/d/1mSzzEC2-PNN1t3cf_umHiZJZdAnFLsKGPv6eOd3cawo/edit#gid=917338460",
pdf_location = "https://github.com/jgammerman/cv/raw/master/jgammerman_cv.pdf",
# html_location = "jamesgammerman.com/cv/",
# source_location = "https://github.com/jgammerman/cv",
use_network_logo = TRUE
)
